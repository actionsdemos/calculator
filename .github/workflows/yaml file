steps:
  - name: Setup node
    uses: actions/setup-node@v3
    with:
      node-version: 16.13.x

  - name: Install Dependencies
    if: ${{ inputs.skip_install != 'true' }}
    run: yarn install
    shell: bash

  - name: 'Run quality checks for Pull Requests'
    if: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
    run: |
      echo "===== Running type checks ====="
      yarn check-types

      echo "===== Running format checks ====="
      yarn format:check

      echo "===== Running lint ====="
      yarn lint

  - name: 'Build WebApp'
    if: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    run: yarn build

  - name: 'Install Prod Dependencies'
    if: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    run: yarn workspaces focus --production

  - name: 'Copy Prod Files'
    if: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    uses: actions/upload-artifact@v2
    with:
      name: prod-files
      path: |
        .yarn/**
        .next/**
        .yarnrc.yml
        yarn.lock
        node_modules/**
        public/**
        package.json
        ecosystem.config.js
        next.config.js

  - name: 'Archive Prod Files'
    if: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    uses: actions/upload-artifact@v2
    with:
      name: prod-archive
      path: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip

  - name: 'Publish Prod Files'
    if: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    uses: actions/upload-artifact@v2
    with:
      name: published-files
      path: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
