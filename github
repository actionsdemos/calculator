name: $(Build.SourceBranchName)_$(Rev:r)
trigger: none

pool:
  name: Portal21
#Your build pipeline references the ‘environment’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971

parameters:
  - name: region
    displayName: CWP Region
    type: string
    default: Please select environment Central or East
    values:
      - central
      - east
      - both

stages:
  - stage: Deployment
    jobs:
      - job: Build
        steps:
          - template: 'azure-default-steps.yaml'

          - task: AzureRmWebAppDeployment@4
            condition: and(succeeded(), or(eq('${{ parameters.region }}', 'central'), eq('${{ parameters.region }}', 'both')))
            displayName: 'Azure web App Deployment: mbr-portal-cfga-us-c-wb'
            inputs:
              azureSubscription: Member Portal Production Service Principle
              ResourceGroupName: 'mbr-portal-prd-us-c-rg'
              appType: 'webAppLinux'
              WebAppName: 'mbr-portal-cfga-us-c-webapp'
              deployToSlotOrASE: true
              SlotName: 'production'
              packageForLinux: '$(Build.ArtifactStagingDirectory)/**/*.zip'
              enableCustomDeployment: true
              DeploymentType: 'zipDeploy'
              StartupCommand: 'yarn start'

          - task: AzureRmWebAppDeployment@4
            condition: and(succeeded(), or(eq('${{ parameters.region }}', 'east'), eq('${{ parameters.region }}', 'both')))
            displayName: 'Azure web App Deployment: mbr-portal-cfga-us-e-wb'
            inputs:
              azureSubscription: Member Portal Production Service Principle
              ResourceGroupName: 'mbr-portal-us-e-rg'
              appType: 'webAppLinux'
              WebAppName: 'mbr-portal-cfga-us-e-webapp'
              deployToSlotOrASE: true
              SlotName: 'production'
              packageForLinux: '$(Build.ArtifactStagingDirectory)/**/*.zip'
              enableCustomDeployment: true
              DeploymentType: 'zipDeploy'
              StartupCommand: 'yarn start'
